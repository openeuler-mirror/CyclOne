

package com.idcos.enterprise.portal.manager.auto;

// auto generated imports

import com.idcos.cloud.core.common.biz.CommonResult;
import com.idcos.enterprise.portal.form.PortalQueryByPageForm;
import com.idcos.enterprise.portal.form.PortalUserQueryPageListForm;

import java.util.List;

/**
 * manager层controller相关的接口自动生成，此文件属于自动生成的，请勿直接修改,具体可以参考codegen工程
 * Generated by <tt>controller-codegen</tt> on 2015-11-07 16:44:40.
 *
 * @author jiaohuizhe
 * @version PortalUserQueryManager.java, v 1.1 2015-11-07 16:44:40 jiaohuizhe Exp $
 */
public interface PortalUserQueryManager {

    /**
     * 分页获取用户列表
     *
     * @param form
     * @return
     */
    CommonResult<?> queryPageList(PortalUserQueryPageListForm form);

    /**
     * 获取某用户信息
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryById(String id);

    /**
     * 获取某用户信息
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryGroupsById(String id);

    /**
     * 获取某用户信息
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryRolesById(String id);

    /**
     * 查询用户组关联的用户信息
     *
     * @param form
     * @return
     */
    CommonResult<?> queryUserPageByGroupIdAndCnd(PortalQueryByPageForm form);

    /**
     * 查询角色所关联的用户信息
     *
     * @param form
     * @return
     */
    CommonResult<?> queryUserPageByRoleIdAndCnd(PortalQueryByPageForm form);

    /**
     * 获取某用户信息
     *
     * @param id
     * @param appId
     * @return BaseResultVO
     */
    CommonResult<?> queryPermissionsById(String id, String appId);

    /**
     * 根据userId和appId获取某用户信息
     *
     * @param userId
     * @param appId
     * @return BaseResultVO
     */
    CommonResult<?> queryPermissionsByUserIdAndAppId(String userId, String appId);

    /**
     * 查询租户下系统的帐号总数，不传租户则查询所有的账号总数
     *
     * @param tenantId
     * @return
     */
    CommonResult<?> getAccountCount(String tenantId);

    /**
     * 新增的rest接口
     * 查询所有的帐号信息
     *
     * @return
     */
    CommonResult<?> getAllAcount();

    /**
     * 新增的rest接口
     * 查询所有的帐号信息
     *
     * @param tenantId
     * @return
     */
    CommonResult<?> getAllAcount(String tenantId);

    /**
     * 新增的rest接口
     * 查询部门下的所有帐号（不包括子部门）
     *
     * @param deptId
     * @param tenantId
     * @param recurse
     * @return
     */
    CommonResult<?> getAcountByDeptId(String tenantId, String deptId, String recurse);

    /**
     * 新增的rest接口
     * 根据登录id获取用户信息。
     *
     * @param tenantId
     * @param accountNo
     * @return
     */
    CommonResult<?> getByAccountNo(String tenantId, String accountNo);

    /**
     * 根据用户id获取用户信息。
     *
     * @param id
     * @return
     */
    CommonResult<?> getUserById(String id);

    /**
     * 新增的rest接口
     * 根据账号登录ids查询账号信息。
     *
     * @param tenantId
     * @param accountNoList
     * @return
     */
    CommonResult<?> getByAccountNos(String tenantId, List<String> accountNoList);

    /**
     * 新增的rest接口
     * 获取当前账户的上次登录时间（rbac中的该数据是从dir中同步过来的）。
     *
     * @return
     */
    CommonResult<?> getLastLoginTime();

    /**
     * 根据userId查询该用户所有信息。
     *
     * @param appId
     * @param userId
     * @param token
     * @return
     */
    CommonResult<?> authInfo(String userId, String appId, String token);

    /**
     * 根据用户登录Id和密码查询用户详情
     *
     * @param appId
     * @param tenantId
     * @param loginId
     * @param password
     * @return
     */
    CommonResult<?> getAuthInfoByLoginIdAndPw(String loginId, String password, String tenantId, String appId);

    /**
     * 查询用户状态
     *
     * @return BaseResultVO
     */
    CommonResult<?> getUserStatus();

}