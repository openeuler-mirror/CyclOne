

package com.idcos.enterprise.portal.manager.auto;

// auto generated imports

import com.idcos.cloud.core.common.biz.CommonResult;
import com.idcos.enterprise.portal.form.PortalQueryByPageForm;
import com.idcos.enterprise.portal.form.PortalUserGroupQueryByPageForm;

/**
 * manager层controller相关的接口自动生成，此文件属于自动生成的，请勿直接修改,具体可以参考codegen工程
 * Generated by <tt>controller-codegen</tt> on 2015-10-28 14:17:42.
 *
 * @author jiaohuizhe
 * @version PortalUserGroupQueryManager.java, v 1.1 2015-10-28 14:17:42 jiaohuizhe Exp $
 */
public interface PortalUserGroupQueryManager {

    /**
     * 获取某用户组信息
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryById(String id);

    /**
     * 获取某用户组角色信息
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryRolesById(String id);

    /**
     * 获取某用户组权限信息
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryPermissionsById(String id);

    /**
     * 获取某用户组用户列表
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryUsersById(String id);

    /**
     * 获取某用户组用户列表(提供给外部系统)
     *
     * @param id
     * @return BaseResultVO
     */
    CommonResult<?> queryUsersByGroupId(String id);

    /**
     * 获取某用户组用户列表(提供给外部系统)
     *
     * @param groupName
     * @param tenantId
     * @return BaseResultVO
     */
    CommonResult<?> queryUserByGroupNameAndTenant(String groupName, String tenantId);

    /**
     * 查询用户所关联的用户组信息
     *
     * @param form
     * @return
     */
    CommonResult<?> queryGroupPageByUserIdAndCnd(PortalQueryByPageForm form);

    /**
     * 查询角色所关联的用户组信息
     *
     * @param form
     * @return
     */
    CommonResult<?> queryGroupPageByRoleIdAndCnd(PortalQueryByPageForm form);

    /**
     * 查询用户组信息
     *
     * @param offset
     * @param limit
     * @param form
     * @param cnd
     * @return BaseResultVO
     */
    CommonResult<?> queryByPage(String offset, String limit, PortalUserGroupQueryByPageForm form, String cnd);

    /**
     * 获取所有部门的Tree型的树
     *
     * @param tenantId
     * @param treeStyle
     * @return BaseResultVO
     */
    CommonResult<?> getAccountGroupTree(String tenantId, String treeStyle);

    /**
     * 根据权限code查询工作组列表
     *
     * @param code
     * @return BaseResultVO
     */
    CommonResult<?> getAccountGroupListByPermissionCode(String code);

    /**
     * 查询字典表用户组类型
     *
     * @param tenantId
     * @return
     */
    CommonResult<?> getUserGroupType(String tenantId);

    /**
     * 根据用户组type查询用户组
     *
     * @param type
     * @return
     */
    CommonResult<?> queryGroupByType(String type);

    /**
     * 根据用户组type查询用户组
     *
     * @param type
     * @param tenantId
     * @return
     */
    CommonResult<?> queryGroupByTypeAndTenantId(String type, String tenantId);

    /**
     * 根据用户组type和用户id查询用户组
     *
     * @param type
     * @param userId
     * @return
     */
    CommonResult<?> queryGroupByTypeAndUserId(String type, String userId);

    /**
     * 根据loginId和tenantId查询用户组集合
     *
     * @param tenantId
     * @param loginId
     * @return
     */
    CommonResult<?> queryGroupByLoginIdAndTenantId(String loginId, String tenantId);

}